/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package commander.cls.controller;

import commander.cls.FileModel;
import commander.cls.TablePanel;
import commander.cls.file.FileInfo;
import java.io.File;
import javax.swing.JOptionPane;
import javax.swing.JTable;

/**
 *
 * @author Nam
 */
public class RenamePanel extends javax.swing.JPanel {

    private static RenamePanel instance;
    public static RenamePanel getInstance() {
        if (instance == null) {
            instance = new RenamePanel();
        }
        return instance;
    }
    
    /**
     * Creates new form RenamePanel
     */
    public RenamePanel() {
        initComponents();
        renameDialog.pack();
        renameDialog.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        renameDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        txtRename = new javax.swing.JTextField();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        rbRemain = new javax.swing.JRadioButton();

        renameDialog.setTitle("Rename");
        renameDialog.setModal(true);
        renameDialog.setResizable(false);

        jLabel1.setText("Rename files to:");

        btnOK.setText("OK");
        btnOK.setMaximumSize(new java.awt.Dimension(69, 32));
        btnOK.setMinimumSize(new java.awt.Dimension(69, 32));
        btnOK.setPreferredSize(new java.awt.Dimension(69, 32));
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        rbRemain.setText("Remain extension");

        javax.swing.GroupLayout renameDialogLayout = new javax.swing.GroupLayout(renameDialog.getContentPane());
        renameDialog.getContentPane().setLayout(renameDialogLayout);
        renameDialogLayout.setHorizontalGroup(
            renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(renameDialogLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(renameDialogLayout.createSequentialGroup()
                        .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(btnCancel))
                    .addGroup(renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(txtRename, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(rbRemain)))
                .addGap(15, 15, 15))
        );
        renameDialogLayout.setVerticalGroup(
            renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(renameDialogLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtRename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rbRemain)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addGroup(renameDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOK, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancel))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // TODO add your handling code here:
        if (!txtRename.getText().isEmpty()) {
            TablePanel panel = DataController.getInstance().getSourcePanel();
            JTable table = panel.getTable();
            FileModel model = (FileModel)table.getModel();

            for (int i = 0; i < rows.length; i++) {
                int convertedRow = table.convertRowIndexToModel(rows[i]);
                FileInfo fi = model.getRow(convertedRow);
                File out = null;
                if (rbRemain.isSelected()) {
                    out = DataController.getInstance().renameFile(fi, txtRename.getText(), "." + fi.extension.toLowerCase());
                }
                else {
                    out = DataController.getInstance().renameFile(fi, txtRename.getText(), "");
                }
                
                if (out != null) {
                    model.setRow(convertedRow, new FileInfo(out.toPath()));
                }
                model.fireTableDataChanged();
            }
        }
        else {
            JOptionPane.showMessageDialog(null, "Text field cannot be blank", "Error", JOptionPane.ERROR_MESSAGE);
        }
        renameDialog.setVisible(false);
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        renameDialog.setVisible(false);
    }//GEN-LAST:event_btnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton rbRemain;
    private javax.swing.JDialog renameDialog;
    private javax.swing.JTextField txtRename;
    // End of variables declaration//GEN-END:variables
    
    private int[] rows = null;
    public void showDialog(int[] rows) {
        if (rows.length > 0) {
            this.rows = rows;
            rbRemain.setSelected(true);
            txtRename.setText("");
            renameDialog.setVisible(true);
        }
        else {
            JOptionPane.showMessageDialog(null, "You select nothing", "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
